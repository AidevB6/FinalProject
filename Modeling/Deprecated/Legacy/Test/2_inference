{"cells":[{"cell_type":"code","execution_count":1,"metadata":{"executionInfo":{"elapsed":882,"status":"ok","timestamp":1630598929103,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"},"user_tz":-540},"id":"3njoRDWlsxSe"},"outputs":[],"source":["import numpy as np\n","import gc\n","from scipy.sparse import coo_matrix, lil_matrix, csr_matrix, load_npz\n","from multiprocessing import Pool\n","from time import time\n","from sklearn.svm import LinearSVC\n","\n","import os\n","import io\n","import distutils.dir_util\n","import json\n","import pickle "]},{"cell_type":"code","execution_count":2,"metadata":{"executionInfo":{"elapsed":4,"status":"ok","timestamp":1630598929104,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"},"user_tz":-540},"id":"SQ8j6vS7u2yN"},"outputs":[],"source":["def pickle_load(fname):\n","    with open(fname, 'rb') as handle:\n","        data = pickle.load(handle)\n","    return data\n","\n","def write_json(data, PATH):\n","    def _conv(o):\n","        if isinstance(o, (np.int64, np.int32)):\n","            return int(o)\n","        raise TypeError\n","\n","    with io.open(PATH, 'w', encoding='utf-8') as f:\n","        json_str = json.dumps(test, ensure_ascii=False, default=_conv)\n","        f.write(json_str)\n","\n","def load_json(fname):\n","    with open(fname, encoding=\"utf-8\") as f:\n","        json_obj = json.load(f)\n","\n","    return json_obj\n","\n","def remove_seen(seen, l):\n","    seen = set(seen)\n","    return [x for x in l if not (x in seen)]\n","\n","def neighbor_based_cf(playlist_id):\n","    item_indices = test_item_indices[playlist_id]\n","\n","    alpha, beta, theta = 0.9, 0.7, 0.99\n","    Cr = 0.4 + (100 - np.shape(item_indices)[0]) * 0.0055\n","    if Cr \u003c 0.2:\n","        Cr = 0.2\n","    elif Cr \u003e 1:\n","        Cr = 1\n","    \n","    song_playlist_train_matrix = lil_matrix(song_playlist_train_matrix_raw)\n","    song_playlist_train_matrix[:,p_encode[playlist_id]] = 0\n","\n","    weight = song_playlist_train_matrix[item_indices, :].multiply(np.power(1e-1 + I_list, beta - 1)).sum(axis=0)\n","    weight = np.array(weight).flatten()\n","    weight = np.power(weight,theta)\n","    value = song_playlist_train_matrix[item_indices, :].multiply(weight)\n","    value = value.dot(song_playlist_train_matrix.transpose()) \n","    I_song_i = np.power(1e-1+I_song[item_indices],-alpha)\n","    value = value.multiply(I_song_i.reshape((-1,1)))\n","    value = value.multiply(np.power(1e-1+I_song,alpha-1))\n","    value = csr_matrix(value)\n","\n","    predictions = lil_matrix(value)\n","    label = np.zeros(song_playlist_train_matrix.shape[0])\n","    label[item_indices] = 1\n","    \n","    clf = LinearSVC(C=Cr,class_weight={0:1,1:1},tol=1e-6, dual = True, max_iter=360000)\n","    clf.fit(predictions.transpose(),label)\n","    predictions = clf.decision_function(predictions.transpose())\n","    predictions = np.argsort(np.array(predictions).flatten() - min(predictions))[::-1]\n","\n","    return np.array(list(predictions[predictions \u003c tag_start_idx][:400]) + list(predictions[(predictions \u003e= tag_start_idx) \u0026 (predictions \u003c tag_title_start_idx)][:100]))  \n"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":20852,"status":"ok","timestamp":1630598956529,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"},"user_tz":-540},"id":"oVRqBPjHvJRL","outputId":"a9067848-4ac2-4ce7-c110-a0c5b6785208"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive\n"]}],"source":[" # 0. (Gdrive) Datasets\n","from google.colab import drive\n","\n","\n","drive.mount('/content/drive')\n","\n","PJT = 'KDT'\n","BASE_PATH = f'/content/drive/MyDrive/{PJT}/'\n","DATASETS_PATH = BASE_PATH + 'Datasets/'\n","RESULTS_PATH = BASE_PATH + 'Results/'\n","\n","train = load_json(DATASETS_PATH + 'test.json')\n","val = load_json(DATASETS_PATH + 'val.json')\n","test = load_json(DATASETS_PATH + 'test.json')\n","train = train + val + test"]},{"cell_type":"code","execution_count":4,"metadata":{"executionInfo":{"elapsed":973,"status":"ok","timestamp":1630598957500,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"},"user_tz":-540},"id":"RgvkCKlOu6uf"},"outputs":[],"source":["s_decode = pickle_load(RESULTS_PATH + 'Preprocess/song_label_decoder.pickle')\n","p_encode = pickle_load(RESULTS_PATH + 'Preprocess/playlist_label_encoder.pickle')\n","tag_start_idx = s_decode['@tag_start_idx']\n","tag_title_start_idx = s_decode['@tag_title_start_idx']"]},{"cell_type":"code","execution_count":5,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1969,"status":"ok","timestamp":1630598959464,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"},"user_tz":-540},"id":"ycuqGUuHu7oF","outputId":"9552a57b-52b3-4933-e224-309b9e2eb09e"},"outputs":[{"name":"stdout","output_type":"stream","text":["load train matrix...\n"]}],"source":["print(\"load train matrix...\")\n","playlist_song_train_matrix = load_npz(RESULTS_PATH + 'Preprocess/playlist_song_train_matrix.npz')\n","song_playlist_train_matrix_raw = lil_matrix(playlist_song_train_matrix.transpose())\n","\n","gc.collect()                                                                                                                                                                                              \n","\n","I_song = np.array(song_playlist_train_matrix_raw.sum(axis=1)).flatten()\n","I_list = np.array(song_playlist_train_matrix_raw.sum(axis=0)).flatten()"]},{"cell_type":"code","execution_count":6,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":1422,"status":"ok","timestamp":1630598960882,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"},"user_tz":-540},"id":"bpcjf2ufu8hw","outputId":"f6ed96f7-178f-4a2f-fcf9-cd93835686db"},"outputs":[{"name":"stdout","output_type":"stream","text":["load test data...\n"]}],"source":["print(\"load test data...\")\n","test = load_json(RESULTS_PATH + 'Preprocess/test_items.json')\n","test_item_indices = dict()\n","test_playlist_id = []\n","for q in test:\n","    if 'items' in q.keys():\n","        test_item_indices[q['id']] = q['items']\n","        test_playlist_id.append(q['id'])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true,"base_uri":"https://localhost:8080/"},"id":"2uBGosPYu-NV"},"outputs":[{"name":"stdout","output_type":"stream","text":["predictions begin...\n"]}],"source":["print(\"predictions begin...\")\n","pool = Pool(23)\n","results = pool.map(neighbor_based_cf, test_playlist_id)\n","pool.close()\n","pool.join()"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"zCAok_mhuzfS"},"outputs":[{"name":"stdout","output_type":"stream","text":["write results.json...\n","end\n"]}],"source":["print(\"write results.json...\")\n","\n","prediction_results = {}\n","for i in range(len(results)):\n","    prediction_results[test_playlist_id[i]] = {\"songs\": [s_decode[s] for s in results[i][:400]], \"tags\": [s_decode[s] for s in results[i][400:]]}\n","\n","answers = []\n","for q in test:\n","    if q['id'] in test_playlist_id:\n","        answers.append({'id': q['id'],\n","        'songs': remove_seen(q['songs'], prediction_results[q['id']]['songs'])[:100],\n","        'tags': remove_seen(q['tags'], prediction_results[q['id']]['tags'])[:10] })\n","    else:\n","        answers.append({'id': q['id'],\n","        'songs': remove_seen(q['songs'], q['songs_mp'])[:100],\n","        'tags': remove_seen(q['tags'], q['tags_mp'])[:10] })\n","    if len(answers[len(answers)-1]['songs']) \u003c 100 or len(answers[len(answers)-1]['tags']) \u003c 10:\n","        answers[len(answers)-1]['songs'] = (answers[len(answers)-1]['songs'] + remove_seen(q['songs'] + answers[len(answers)-1]['songs'], q['songs_mp']))[:100]\n","        answers[len(answers)-1]['tags'] = (answers[len(answers)-1]['tags'] + remove_seen(q['tags'] + answers[len(answers)-1]['tags'], q['tags_mp']))[:10]\n","write_json(answers, RESULTS_PATH + 'Inference/results.json')\n","\n","print('end')"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"GDq9nt8x2vix"},"outputs":[],"source":[""]}],"metadata":{"accelerator":"GPU","colab":{"authorship_tag":"ABX9TyPr6UlHm6KNEMupXXcvNq9J","collapsed_sections":[],"machine_shape":"hm","name":"2_inference","version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}