{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"1_preprocess","provenance":[],"collapsed_sections":[],"mount_file_id":"1zYRXG6o1wHSXLS9M7J5N8FMwcTIhLVLF","authorship_tag":"ABX9TyP4QwzrlqK1S4M4G6F7opiI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"nzD-K7RTtRIO","executionInfo":{"status":"ok","timestamp":1630598903984,"user_tz":-540,"elapsed":414,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"}}},"source":["# libs\n","from operator import itemgetter\n","from scipy.sparse import coo_matrix, save_npz\n","import numpy as np\n","from collections import defaultdict\n","\n","import os\n","import io\n","import distutils.dir_util\n","from collections import Counter\n","import json\n","import pickle "],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"id":"t83B59J3tRt7","executionInfo":{"status":"ok","timestamp":1630598903985,"user_tz":-540,"elapsed":6,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"}}},"source":["# functions\n","def pickle_dump(data, fname):\n","    with open(fname, 'wb') as handle:\n","        pickle.dump(data, handle, protocol=pickle.HIGHEST_PROTOCOL)\n","\n","def write_json(data, PATH):\n","    def _conv(o):\n","        if isinstance(o, (np.int64, np.int32)):\n","            return int(o)\n","        raise TypeError\n","\n","    with io.open(PATH, 'w', encoding='utf-8') as f:\n","        json_str = json.dumps(test, ensure_ascii=False, default=_conv)\n","        f.write(json_str)\n","\n","def load_json(fname):\n","    with open(fname, encoding=\"utf-8\") as f:\n","        json_obj = json.load(f)\n","    return json_obj\n","\n","def most_popular(playlists, col, topk_count):\n","    c = Counter()\n","    for doc in playlists:\n","        c.update(doc[col])\n","    topk = c.most_common(topk_count)\n","    return c, [k for k, v in topk]\n","\n","def remove_seen(seen, l):\n","    seen = set(seen)\n","    return [x for x in l if not (x in seen)]\n","\n","def title_into_words(title):\n","    word_index_list = []\n","    for word in all_word_list:\n","        if word[0] in title:\n","            word_index_list.append([word[0], title.index(word[0]), tags_mp_counter[word[0]] * -1])\n","    word_list = [word_index[0] for word_index in sorted(word_index_list, key=itemgetter(1,2))]\n","    word_list_popular = []\n","    i=0\n","    while i < len(word_list):\n","        same_words = [word_list[i]]\n","        for j in range(i+1, len(word_list)):\n","            if word_list[i] in word_list[j] or word_list[j] in word_list[i]:\n","                same_words.append(word_list[j])\n","            else:\n","                break\n","        i+=len(same_words)\n","        max_popularity = 0\n","        word_to_append = None\n","        for word in same_words:\n","            if tags_mp_counter[word] > max_popularity:\n","                word_to_append = word\n","                max_popularity = tags_mp_counter[word]\n","        if word_to_append is not None:\n","            word_list_popular.append(word_to_append)\n","    return word_list_popular"],"execution_count":2,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xF6SqieqtYsV","executionInfo":{"status":"ok","timestamp":1630598905804,"user_tz":-540,"elapsed":1824,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"}},"outputId":"24f48d0f-6981-46a9-bcac-3b515a26e89a"},"source":["# 0. (Gdrive) Datasets\n","from google.colab import drive\n","\n","\n","drive.mount('/content/drive')\n","\n","PJT = 'KDT'\n","BASE_PATH = f'/content/drive/MyDrive/{PJT}/'\n","DATASETS_PATH = BASE_PATH + 'Datasets/'\n","RESULTS_PATH = BASE_PATH + 'Results/'\n","\n","train = load_json(DATASETS_PATH + 'test.json')\n","val = load_json(DATASETS_PATH + 'val.json')\n","test = load_json(DATASETS_PATH + 'test.json')\n","train = train + val + test"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Js5JGLcvtcBX","executionInfo":{"status":"ok","timestamp":1630598907022,"user_tz":-540,"elapsed":1223,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"}},"outputId":"2fa2dc53-3530-49a0-e4e5-b34a99c2175b"},"source":["print('rank popular songs/tags...')\n","data_by_yearmonth = defaultdict(list)\n","for q in train:\n","    try:\n","        data_by_yearmonth[q['updt_date'][0:4]].append(q)\n","    except:\n","        pass\n","    try:\n","        data_by_yearmonth[q['updt_date'][0:7]].append(q)\n","    except:\n","        pass\n","data_by_yearmonth = dict(data_by_yearmonth)\n","\n","most_popular_results = {}\n","songs_mp_counter, most_popular_results['songs'] = most_popular(train, \"songs\", 200)\n","tags_mp_counter, most_popular_results['tags'] = most_popular(train, \"tags\", 50)\n","for y in data_by_yearmonth.keys():\n","    _, most_popular_results['songs' + y] = most_popular(data_by_yearmonth[y], \"songs\", 200)\n","    _, most_popular_results['tags' + y] = most_popular(data_by_yearmonth[y], \"tags\", 50)"],"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["rank popular songs/tags...\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"I06YL0Q-tdoF","executionInfo":{"status":"ok","timestamp":1630598911285,"user_tz":-540,"elapsed":4266,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"}},"outputId":"546912ef-e025-4e90-cf14-e9309a1f57ef"},"source":["print('split title into words...')\n","all_word_list = []\n","for t in tags_mp_counter.most_common(): # use tags as words dictionary\n","    if t[1] >= 5 and len(t[0]) > 1:\n","        all_word_list.append(t)\n","for q in train:\n","    q['title_words'] = title_into_words(q['plylst_title'])\n","for q in test:\n","    q['title_words'] = title_into_words(q['plylst_title'])"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["split title into words...\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-3APw34VtetF","executionInfo":{"status":"ok","timestamp":1630598916144,"user_tz":-540,"elapsed":4864,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"}},"outputId":"127bc958-f703-4cc0-94b4-0e2aa289638a"},"source":["print('write train matrix...')\n","playlist_song_train_matrix = []\n","p_encode, s_encode, p_decode, s_decode = {}, {}, {}, {}\n","playlist_idx = 0\n","song_idx = 0\n","for q in train:\n","    if len(q['songs']) + len(q['tags']) + len(q['title_words']) >= 1:\n","        p_encode[q['id']] = playlist_idx\n","        for s in q['songs']:\n","            if s not in s_encode.keys():\n","                s_encode[s] = song_idx\n","                song_idx += 1\n","            playlist_song_train_matrix.append([playlist_idx, s_encode[s]])\n","        playlist_idx += 1\n","s_decode['@tag_start_idx'] = song_idx\n","for q in train:\n","    if len(q['songs']) + len(q['tags']) + len(q['title_words']) >= 1:\n","        for s in q['tags']:\n","            if s not in s_encode.keys():\n","                s_encode[s] = song_idx\n","                song_idx += 1\n","            playlist_song_train_matrix.append([p_encode[q['id']], s_encode[s]])\n","s_decode['@tag_title_start_idx'] = song_idx\n","for q in train:\n","    if len(q['songs']) + len(q['tags']) + len(q['title_words']) >= 1:\n","        for s in q['title_words']:\n","            if '!title_' + str(s) not in s_encode.keys():\n","                s_encode['!title_' + str(s)] = song_idx\n","                song_idx += 1\n","            playlist_song_train_matrix.append([p_encode[q['id']], s_encode['!title_' + str(s)]])\n","playlist_song_train_matrix = np.array(playlist_song_train_matrix)\n","playlist_song_train_matrix = coo_matrix((np.ones(playlist_song_train_matrix.shape[0]),(playlist_song_train_matrix[:,0], playlist_song_train_matrix[:,1])),shape=(playlist_idx,song_idx))\n","save_npz(RESULTS_PATH + 'Preprocess/playlist_song_train_matrix.npz', playlist_song_train_matrix)\n","for s in s_encode.keys():\n","    s_decode[s_encode[s]] = s\n","pickle_dump(s_decode, RESULTS_PATH + 'Preprocess/song_label_decoder.pickle')\n","pickle_dump(p_encode, RESULTS_PATH + 'Preprocess/playlist_label_encoder.pickle')\n","\n","title_words_mp_counter, _ = most_popular(train, \"title_words\", 50)"],"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["write train matrix...\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qrxIPXkhsyGW","executionInfo":{"status":"ok","timestamp":1630598918771,"user_tz":-540,"elapsed":2630,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"}},"outputId":"135cfab2-d5d4-446f-c94c-368370e7f5be"},"source":["print('write test item indices...')\n","for q in test:\n","    if len(q['songs']) + len(q['tags']) + len(q['title_words']) >= 1:\n","        if np.mean([songs_mp_counter[i] for i in q['songs']] + [tags_mp_counter[i] for i in q['tags']] + [title_words_mp_counter[i] for i in q['title_words']]) > 1:\n","            items = [s_encode[s] for s in q['songs'] + q['tags']]\n","            try:\n","                for s in q['title_words']:\n","                    if '!title_' + str(s) in s_encode.keys():\n","                        items.append(s_encode['!title_' + str(s)])\n","            except KeyError:\n","                q['title_words'] = []\n","            q['items'] = items\n","    \n","    if 'songs'+q['updt_date'][0:7] in most_popular_results.keys():\n","        q['songs_mp'] = (remove_seen(q['songs'],most_popular_results['songs'+q['updt_date'][0:7]] + remove_seen(most_popular_results['songs'+q['updt_date'][0:7]], most_popular_results['songs'])))[:100]\n","        q['tags_mp'] = (remove_seen(q['tags'],most_popular_results['tags'+q['updt_date'][0:7]] + remove_seen(most_popular_results['tags'+q['updt_date'][0:7]], most_popular_results['tags'])))[:10]\n","    elif 'songs'+q['updt_date'][0:4] in most_popular_results.keys():\n","        q['songs_mp'] = (remove_seen(q['songs'],most_popular_results['songs'+q['updt_date'][0:4]] + remove_seen(most_popular_results['songs'+q['updt_date'][0:4]], most_popular_results['songs'])))[:100]\n","        q['tags_mp'] = (remove_seen(q['tags'],most_popular_results['tags'+q['updt_date'][0:4]] + remove_seen(most_popular_results['tags'+q['updt_date'][0:4]], most_popular_results['tags'])))[:10]\n","    else:\n","        q['songs_mp'] = remove_seen(q['songs'],most_popular_results['songs'][:100])\n","        q['tags_mp'] = remove_seen(q['tags'],most_popular_results['tags'][:10])\n","\n","write_json(test, RESULTS_PATH + 'Preprocess/test_items.json')"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["write test item indices...\n"]}]},{"cell_type":"code","metadata":{"id":"ZL0U4UCF6ZFE","executionInfo":{"status":"ok","timestamp":1630598918772,"user_tz":-540,"elapsed":11,"user":{"displayName":"­임창묵","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"01910034232519252084"}}},"source":[""],"execution_count":7,"outputs":[]}]}